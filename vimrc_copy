"set runtimepath+=~/.vim_runtime

"source ~/.vim_runtime/vimrcs/basic.vim
"source ~/.vim_runtime/vimrcs/filetypes.vim
"source ~/.vim_runtime/vimrcs/plugins_config.vim
"source ~/.vim_runtime/vimrcs/extended.vim

"try
"source ~/.vim_runtime/my_configs.vim
"catch
"endtry
"
"
"--------------------------------------------------------------
"13.11.2017 -- the day you fucked up your vim config
"--------------------------------------------------------------
"
"

set nocompatible		" viMproved
filetype off			" required

set rtp +=~/.vim/bundle/Vundle.vim
call vundle#begin()


Plugin 'VundleVim/Vundle.vim'

" fix gruvbox colorscheme for background light, contrast soft
Plugin 'morhetz/gruvbox'
Plugin 'valloric/youcompleteme'
Plugin 'potatoesmaster/i3-vim-syntax'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-commentary'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'



Plugin 'severin-lemaignan/vim-minimap'





" ----- more plugins here because you broke your fucking config!! -----
"
" --------------------- anger here -- all over here -------------------

call vundle#end()	    	" required
filetype plugin indent on	" required

"----------------------------------------------------------------------
" This is where you start the general vim configs
" ---------------------------------------------------------------------

syntax on

set history=500
set autoread

set title
set mouse=a
set so=7

set number
set ruler
set cursorline

set backspace=2

let mapleader=","
let maplocalleader=","

nmap <leader>w :w!<cr>
"command W w !sudo tee % > /dev/null

set ignorecase			" ignore case when searching
set smartcase			" be smart about cases when searching
set hlsearch			" highlight the search results
set incsearch			" not entirely sure -------
set showmatch			" show matching bracket when one is hovered
set mat=2			    " how many tenth of a sec to blink on matching bracket

set noerrorbells
set novisualbell
set t_vb=
set tm=500

set foldcolumn=1		" add a bit of margin to the left

"----------------------------------------------------------------------
" Colors and Fonts
"----------------------------------------------------------------------

syntax enable

" Enable 256 colors palette in Gnome Terminal
if $COLORTERM == 'gnome-terminal'
    set t_Co=256
endif

"try
"    colorscheme desert
 "   colorscheme gruvbox
"catch
"endtry

colorscheme gruvbox

set background=dark

" Set extra options when running in GUI mode
"if has("gui_running")
 "   set guioptions-=T
  "  set guioptions-=e
   " set t_Co=256
"    set guitablabel=%M\ %t
"endif

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

"----------------------------------------------------------------------
" Tabs and Indents
"----------------------------------------------------------------------

set expandtab				" use spaces instead of tabs
set smarttab				" bes smart when using tabs
set shiftwidth=4
set tabstop=4

set ai					" auto indent
set si					" smart indent
set wrap				" wrap lines

"----------------------------------------------------------------------
" Visual mode hack
"----------------------------------------------------------------------

" Visual mode pressing * or # searches for the current selection
" Super useful! From an idea by Michael Naumann
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>

"----------------------------------------------------------------------
" Move around the window
"----------------------------------------------------------------------

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l


" Useful mappings for managing tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
map <leader>t<leader> :tabnext


"----------------------------------------------------------------------
" 
"---------------------------------------------------------------------

" NERDTree --------------------------------------------------
let g:NERDTreeWinPos = "left"
let g:NERDTreeWinSize=25

let NERDTreeChDirMode = 2
let NERDTreeShowBookmarks = 1

map <leader>nn :NERDTreeToggle<CR>
map <leader>nb :nerdtreefrombookmarks<space>
map <leader>nf :nerdtreefind<cr>

autocmd vimenter * NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" GRUVBOX ---------------------------------------------------
"let g:gruvbox_termcolors=16
let g:gruvbox_contrast_light='soft'

" YOU COMPLETE ME -------------------------------------------
let g:ycm_python_binary_path = '/usr/bin/python2'
let g:ycm_server_python_interpreter = '/usr/bin/python2'

" SYNTASTIC -------------------------------------------------
let g:syntastic_python_checkers=['pyflakes']                " python
let g:syntastic_javascript_checkers=['jshint']              " javascript

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" COMMENTARY ------------------------------------------------
" gc ------ comment things out in visual mode

" FUGITIVE --------------------------------------------------
set statusline=%{fugitive#statusline()}
